swagger: "2.0"
info:
  description: "This is the Villain API. Here you can find all the infomation about the requests you can do with this API. Attention: Don't stare too long, our villains may start feeling challenged! "
  version: "1.0.0"
  title: "Villains API"
  termsOfService: "http://"
  contact:
    email: "villains@evil.corp"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "villains.evil.corp"
basePath: "/v2"
tags:
- name: "Villains"
  description: "Prepare for real evil!"
  externalDocs:
    description: "Find out more"
    url: "http://villains.evil.corp"
schemes:
- "https"
- "http"
paths:
  /api/villains:
    get:
      tags:
      - "Villains"
      summary: "Shows all villains in the database."
      description: ""
      operationId: "getAllVillains"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Villains found!"
          schema:
            type: array
            items:
              $ref: "#/definitions/Villain"
        "204":
          description: "The database is empty."
          schema:
            $ref: "#/definitions/BusinessError"
        "422":
          description: "Business error!"
          schema:
            $ref: "#/definitions/BusinessError"
    post:
      tags:
      - "Villains"
      summary: "Adds a new villain to the database."
      description: ""
      operationId: "saveVillain"
      consumes:
      - "application/json"
      parameters:
      - name: "newVillain"
        in: "body"
        description: "Villain to be added to database"
        required: true
        schema:
          $ref: "#/definitions/Villain"
      responses:
        "201":
          description: "Villain created and added to database!"
          schema:
            $ref: "#/definitions/Villain"
        "400":
          description: "Invalid input"
          schema:
            $ref: "#/definitions/BusinessError"
  /api/villains/{villainId}:
    get:
      tags:
      - "Villains"
      summary: "Shows a villain for a given ID."
      description: ""
      operationId: "getVillainById"
      produces:
      - "application/json"
      parameters:
      - name: "villainId"
        in: "path"
        description: "ID of villain to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Villain found"
          schema: 
            $ref: "#/definitions/Villain"
        "204":
          description: "No villain with the requested Id."
          schema:
            $ref: "#/definitions/BusinessError"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/BusinessError"
        "422":
          description: "Business error!"
          schema:
            $ref: "#/definitions/BusinessError"
    patch:
      tags:
      - "Villains"
      summary: "Updates a villain for a given ID."
      description: ""
      operationId: "updateVillainById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "villainId"
        in: "path"
        description: "ID of villain to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "villainUpdate"
        in: "body"
        description: "Keys and values to be updated"
        required: true
        schema:
          $ref: "#/definitions/Villain"
      responses:
        "200":
          description: "Villain updated for the requested id."
          schema:
            $ref: "#/definitions/Villain"
        "400":
          description: "Villain not found with the requested id."
          schema:
            $ref: "#/definitions/BusinessError"
        "422":
          description: "Business error!"
          schema:
            $ref: "#/definitions/BusinessError"
        "500":
          description: "Server error."
          schema:
            $ref: "#/definitions/BusinessError"
    delete:
      tags:
      - "Villains"
      summary: "Deletes a villain for a given ID."
      operationId: "deleteVillainById"
      parameters:
      - name: "villainId"
        in: "path"
        description: "ID of villain to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "204":
          description: "Villain updated for the requested id."
          schema:
            $ref: "#/definitions/BusinessError"
        "400":
          description: "Villain not found with the requested id."
          schema:
            $ref: "#/definitions/BusinessError"
        "422":
          description: "Business error!"
          schema:
            $ref: "#/definitions/BusinessError"
        "500":
          description: "Server error."
          schema:
            $ref: "#/definitions/BusinessError"
definitions:
  Villain:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      otherName:
        type: "string"
      level: 
        type: "integer"
        format: "int64"
      picture:
        type: "string"
      powers:
        type: "string"
  BusinessError:
    type: "object"
    properties:
      errorCode:
        type: "integer"
        description: error identification
      errorMessage:
        type: "string"
        description: error message
externalDocs:
  description: "Find out more about Swagger"
  url: "http://localhost:8080"